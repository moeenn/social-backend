version: '3'

dotenv: ['.env']

vars:
  MIGRATIONS_PATH: ./db/migrations
  ENV_FILE: .env
  MAIN: ./cmd/app/app.go

tasks:
  test:
    cmds:
      - godotenv -f {{.ENV_FILE}} go test ./...

  # usage: FILTER=^TestSomething\$ task test:filter
  "test:filter":
    cmds:
      - godotenv -f {{.ENV_FILE}} go test -run $FILTER -v ./...

  lint:
    cmds:
      - golangci-lint run ./...

  run:
    cmds:
      - task: lint
      - godotenv -f {{.ENV_FILE}} go run {{.MAIN}}

  build:
    cmds:
      - task: lint
      - task: test
      - go build -o ./bin/app {{.MAIN}}

  "migration:create":
    cmds:
      - migrate create -ext sql -dir {{.MIGRATIONS_PATH}} -seq $NAME

  "migrate:up":
    cmds:
      - migrate -path '{{.MIGRATIONS_PATH}}' -database $DB_CONNECTION -verbose up

  "migrate:down":
    cmds:
      - migrate -path {{.MIGRATIONS_PATH}} -database $DB_CONNECTION drop

  "migrate:refresh":
    cmds:
      - task: migrate:down
      - task: migrate:up

  "gen:models":
    cmds:
      - sqlc generate